# -*- coding: utf-8 -*-
"""2_Movie_Recommendation.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19zB81IGfWmZb_j7pAZlcRVDbLwdCqFcE

**1. Import Libraries**
"""

import pandas as pd
import plotly.graph_objects as go
import json

"""**2. Import and filter the dataset**"""

df = pd.read_csv('/content/netflix_titles.csv')

df.head()

# We need only title and description:
df[['title','description']]

"""**3. Preprocess the Data**"""

# Insert into new variable:
netflix_data = df.copy()

# Fill NaN values:
netflix_data['description'] = netflix_data['description'].fillna('')

"""**4. Prepare the ML model and the Data**"""

# Import model:
from sklearn.feature_extraction.text import TfidfVectorizer
tfidf = TfidfVectorizer(stop_words='english')

# Fit the Data:
tfidf_matrix = tfidf.fit_transform(netflix_data['description'])

"""**5. Creating the Model :**"""

# Create the model :
from sklearn.metrics.pairwise import linear_kernel
cosine_sim = linear_kernel(tfidf_matrix, tfidf_matrix)

indices = pd.Series(netflix_data.index, index=netflix_data['title']).drop_duplicates()

# Create prediction function:
def get_recommendations(title, cosine_sim=cosine_sim):
    idx = indices[title]
    sim_scores = list(enumerate(cosine_sim[idx]))
    sim_scores = sorted(sim_scores, key=lambda x: x[1], reverse=True)
    sim_scores = sim_scores[1:11]
    movie_indices = [i[0] for i in sim_scores]
    return netflix_data[['title','description']].iloc[movie_indices]

"""**6. Test the Model**"""

get_recommendations('Ganglands')